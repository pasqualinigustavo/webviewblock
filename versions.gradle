/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.android_gradle_plugin = '7.1.0-alpha01'
versions.apache_commons = "2.5"
versions.androidx_core = "1.1.0"
versions.androidx_lifecycle = "2.2.0"
versions.androidx_paging = "2.1.0"
versions.arch_core = "2.0.1"
versions.atsl_rules = "1.1.1"
versions.atsl_runner = "1.1.1"
versions.atsl_junit = "1.1.0"
versions.atsl_truth = '1.0.0'
versions.constraint_layout = "2.0.0-alpha2"
versions.core_ktx = "1.0.0"
versions.crystalseek = "1.1.3"
versions.dagger = "2.16"
versions.dexmaker = "2.2.0"
versions.espresso = "3.1.1"
versions.fragment = "1.2.2"
versions.glide = "4.11.0"
versions.hamcrest = "1.3"
versions.junit = "4.12"
versions.kotlin = "1.3.21"
versions.lifecycle = "2.2.0"
versions.material = "1.2.0-alpha06"
versions.mockito = "2.27.0"
versions.mockito_all = "2.27.0"
versions.mockito_android = "2.27.0"
versions.truth = '1.0.1'
versions.mockwebserver = "3.8.1"
versions.moshi = "1.9.2"
versions.navigation = "2.2.1"
versions.okhttp_logging_interceptor = "3.9.0"
versions.paging = "2.1.0-rc01"
versions.retrofit = "2.3.0"
versions.robolectric = "4.2"
versions.room = "2.1.0-alpha06"
versions.rx_android = "2.0.1"
versions.rxjava2 = "2.1.3"
versions.support = "1.0.0"
versions.material = "1.2.0-alpha05"
versions.timber = "4.5.1"
versions.work = "2.1.0-alpha01"
versions.rxkotlin = "2.0.0"
versions.rxandroid = "2.1.1"
versions.rxjava2adapter = "2.5.0"
versions.rxjava2 = "2.1.0"
versions.daggermock = "0.8.5"
versions.nhaarman = "2.1.0"
versions.shimmer = "0.1.0@aar"
versions.work = "1.0.1"
versions.markwon = "4.2.0"

def deps = [:]


def android = [:]
android.androidx = "androidx.core:core-ktx:$versions.androidx_core"
android.androidlifecycle = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.androidx_lifecycle"
android.paging = "androidx.paging:paging-runtime:$versions.androidx_paging"
android.work = "android.arch.work:work-runtime:$versions.work"
deps.android = android

def nhaarman = [:]
nhaarman.mockito = "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.nhaarman"
deps.nhaarman = nhaarman

def rx = [:]
rx.kotlin = "io.reactivex.rxjava2:rxkotlin:$versions.rxkotlin"
rx.android = "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
rx.java = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx = rx

def kakao = [:]
kakao.plugin = "com.android.tools.build:gradle:$versions.kakao"
kakao.testing = "com.agoda.kakao:kakao:$versions.kakao"

deps.kakao = kakao

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:$versions.support"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.design = "com.google.android.material:material:$versions.material"
support.v4 = "androidx.legacy:legacy-support-v4:$versions.support"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
support.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
support.fragment_runtime = "androidx.fragment:fragment:${versions.fragment}"
support.fragment_runtime_ktx = "androidx.fragment:fragment-ktx:${versions.fragment}"
support.fragment_testing = "androidx.fragment:fragment-testing:${versions.fragment}"
deps.support = support

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.viewmodel_savedstate = "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycle"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.runtime = "androidx.arch.core:core-runtime:$versions.arch_core"
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.rxjava2 = "com.squareup.retrofit2:adapter-rxjava2:$versions.rxjava2adapter"
deps.retrofit = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"

deps.dagger = dagger

def daggermock = [:]
daggermock.test = "com.github.fabioCollini.daggermock:daggermock:$versions.daggermock"
daggermock.testkotlin = "com.github.fabioCollini.daggermock:daggermock-kotlin:$versions.daggermock"

deps.daggermock = daggermock

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.runner = "androidx.test:runner:$versions.atsl_runner"
atsl.rules = "androidx.test:rules:$versions.atsl_runner"
atsl.ext_junit = "androidx.test.ext:junit:$versions.atsl_junit"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"

deps.mockito = mockito

def truth = [:]
truth.ext_truth = "androidx.test.ext:truth:$versions.atsl_truth"
truth.google = "com.google.truth:truth:$versions.truth"
deps.truth = truth

def zxing = [:]
zxing.core = "com.google.zxing:core:$versions.zxing"
zxing.android = "com.google.zxing:android-core:$versions.zxing_android"
deps.zxing = zxing

def appCenterSdkVersion = [:]
appCenterSdkVersion.analytics = "com.microsoft.appcenter:appcenter-analytics:$versions.appCenterSdkVersion"
appCenterSdkVersion.crashes = "com.microsoft.appcenter:appcenter-crashes:$versions.appCenterSdkVersion"
deps.appCenterSdkVersion = appCenterSdkVersion

def moshi = [:]
moshi.retrofit = "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
moshi.core = "com.squareup.moshi:moshi:$versions.moshi"
moshi.kotlin = "com.squareup.moshi:moshi-kotlin:$versions.moshi"
moshi.codegen = "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi"
moshi.adapters = "com.squareup.moshi:moshi-adapters:$versions.moshi"
deps.moshi = moshi

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.reflect = "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"

deps.kotlin = kotlin

def libphonenumber = [:]
libphonenumber = "com.googlecode.libphonenumber:libphonenumber:$versions.libphonenumber"
deps.libphonenumber = libphonenumber

deps.paging_ktx = "androidx.paging:paging-runtime-ktx:$versions.paging"

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide
deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.vpi = "com.github.ronaldsmartin:Material-ViewPagerIndicator:$versions.vpi"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"
deps.crystalseek = "com.crystal:crystalrangeseekbar:$versions.crystalseek"
deps.markwon = "io.noties.markwon:core:$versions.markwon"
ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 14
build_versions.target_sdk = 30
build_versions.build_tools = "30.0.3"
ext.build_versions = build_versions

def work = [:]
work.runtime = "androidx.work:work-runtime:$versions.work"
work.testing = "androidx.work:work-testing:$versions.work"
work.firebase = "androidx.work:work-firebase:$versions.work"
work.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.work"
deps.work = work

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"

navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.maven { url 'https://jitpack.io' }
    handler.maven { url "https://kotlin.bintray.com/kotlinx/" } // For kotlinx-metadata-jvm used by Room 2.1.0 (KT-27991)
}
ext.addRepos = this.&addRepos
